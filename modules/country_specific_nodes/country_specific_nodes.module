<?php

/**
 * @file
 * This module helps to manage country specific handling of nodes.
 */

use \Drupal\Core\Access\AccessResult;
use \Drupal\views\ViewExecutable;

/**
 * Implements hook_help().
 */
function country_specific_nodes_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the block module.
    case 'help.page.country_specific_nodes':
      return '<p>' . t('This page provides a user to select content types to attach the country selection field to it. Country selection field will be attached to the selected content types and removed from the non selected content types.') . '</p>';

    case 'country_specific_nodes.provide_tabs.default_country':
      return t('This page helps in setting the default/fallback country for the user if in rare cases the users IP is not detected, Please specify the default country such as India, Japan, etc.');
  }
}

/**
 * Implements hook_node_access().
 */
function country_specific_nodes_node_access(\Drupal\node\NodeInterface $node, $op, \Drupal\Core\Session\AccountInterface $account) {

  // Check if $node is object as in some cases it returns string.
  if (is_object($node)) {
    // Check for bypass permission.
    $bypass_access = \Drupal::currentUser()->hasPermission('bypass country restriction');
    if (!$bypass_access) {
      // Visible only for selected countries.
      if (empty($node->csn_hidden)) {
        return AccessResult::neutral();
      }
      // For unselected countries.
      elseif (!empty($node->csn_hidden)) {
        return AccessResult::forbidden();
      }
    }
  }

  // Returning nothing from this function would have the same effect.
  return AccessResult::neutral();
}

/**
 * Implements hook_ENTITY_TYPE_load($entities).
 *
 * This function is implemented to manage the display of nodes
 * based on $node->cse_hidden value.
 */
function country_specific_nodes_node_load($nodes) {
  // Get user country.
  $csn_config = \Drupal::getContainer()->get('config.factory')->getEditable('country_specific_nodes.settings');
  $user_country = (!empty($_SESSION['ip_country_code'])) ? $_SESSION['ip_country_code'] : $csn_config->get('country_specific_nodes_def_cn');
  $bypass_access = \Drupal::currentUser()->hasPermission('bypass country restriction');

  // Get the list of types for which the functionality is to be inverted.
  $include_list_string = $csn_config->get('country_specific_nodes_include_list');
  $include_list = (!empty($include_list_string)) ? explode(',', $include_list_string) : array();

  foreach ($nodes as $node) {
    // Check if $node is object.
    if (is_object($node)) {
      // Check if field is attached.
      $country_field_config = \Drupal\field\Entity\FieldConfig::loadByName('node', $node->getType(), 'field_countries_cce');
      if ($country_field_config == NULL) {
        return;
      }

      // Set default hidden parameter in node object.
      $node->csn_hidden = 0;

      // Check for bypass permission.
      if (!$bypass_access) {
        $user_country_selected = FALSE;
        $inverted_content_types = in_array($node->bundle(), $include_list);
        $invert_countries = $node->get('field_invert_countries')->getValue();
        $invert_node = $invert_countries[0]['value'];
        // Get countries selected if any.
        $filter_countries = $node->get('field_countries_cce')->getValue();

        if (!empty($filter_countries)) {
          foreach ($filter_countries as $ccode) {
            if ($ccode['value'] == $user_country) {
              $user_country_selected = TRUE;
              break;
            }
          }
        }

        // For unselected countries.
        if (!$user_country_selected && ($inverted_content_types || $invert_node)) {
          $node->csn_hidden = 1;
        }
        // Invisible for selected countries.
        elseif ($user_country_selected && (!$inverted_content_types && !$invert_node)) {
          $node->csn_hidden = 1;
        }
      }
    }
  }
}

/**
 * Helper function for field storage to get the country list.
 */
function _get_csn_countries() {
  // Get the required country list from our country manager.
  $countries = \Drupal::service('country_manager')->getList();
  return $countries;
}

/**
 * Implements hook_views_pre_render().
 * Node access support to views.
 */
function country_specific_nodes_views_pre_render(ViewExecutable $view) {
  foreach($view->result as $index => $result) {
    $node = node_load($result->nid);
    if($node->csn_hidden == 1) {
      unset($view->result[$index]);
    }
  }
}
